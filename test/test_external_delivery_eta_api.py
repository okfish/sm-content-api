# coding: utf-8

"""
    Stores API

    API для мерчантов для управления своими торговыми точками   # Порядок работы с Stores API  1. Получить access token, выполнив (POST /auth/token) аутентификацию по oAuth 2.0 flow (client credentials) 2. Получить список своих торговых точек выполнив запрос /retail-chains/{retail_chain_slug}/stores     - Где retail_chain_slug это идентификатор сети мерчанта полученный в СберМаркете     - Этот запрос возвращает постраничный список ваших stores, зарегистрированных в СберМаркете     - В поле \"id\" находится идентификатор store в системе СберМеркет     - В поле \"merchant_store_id\" находится идентификатор store в системе мерчанта       - Для получения или изменения данных по торговой точке необходимо предоставлять этот идентификатор (merchant_store_id в пути к ресурсу) 3. Указать дополнительные данные по торговой точке, которые зависят от типа интеграции с СберМаркетом и вида торговой точки:     - при доставке мерчантом:       - PUT /retail-chains/{retail_chain_slug}/stores/{merchant_store_id}/merchant-status (изменение статуса магазина)         - чтобы узнать текущий статус store в приложении СберМаркет используйте GET /retail-chains/{retail_chain_slug}/stores/{merchant_store_id}           в поле sm_status.status указано доступен ли этот store в приложении СберМаркет для новых заказов     - для всех случаев:       - PUT /retail-chains/{retail_chain_slug}/stores/{merchant_store_id}/working-hours (рабочие часы торговой точки) 

    The version of the OpenAPI document: 1.0.7
    Contact: merchant.api@sbermarket.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sm_content_api.api.external_delivery_eta_api import ExternalDeliveryEtaApi


class TestExternalDeliveryEtaApi(unittest.TestCase):
    """ExternalDeliveryEtaApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ExternalDeliveryEtaApi()

    def tearDown(self) -> None:
        pass

    def test_get_store_external_delivery_eta(self) -> None:
        """Test case for get_store_external_delivery_eta

        Настройка параметра доставки eta и sigma
        """
        pass

    def test_put_store_external_delivery_eta(self) -> None:
        """Test case for put_store_external_delivery_eta

        Изменение настройки параметров внешней доставки eta и sigma
        """
        pass

    def test_put_store_external_delivery_eta_v2(self) -> None:
        """Test case for put_store_external_delivery_eta_v2

        Изменение настройки параметров внешней доставки eta и sigma
        """
        pass


if __name__ == '__main__':
    unittest.main()
